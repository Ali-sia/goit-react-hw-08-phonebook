{"version":3,"file":"static/js/30.3d9f9914.chunk.js","mappings":"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","sources":["redux/contacts/contacts.selectors.js","components/NotFound/NotFound.jsx","components/App.styled.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Box.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Title/Title.styledd.jsx","components/Title/Title.jsx","pages/Contacts/Contacts.js"],"sourcesContent":["//selectors\nexport const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter;\n","import image from './713761_big_8857bc5285.jpeg';\n\nexport const NotFound = () => {\n  return (\n    <div className=\"d-flex flex-column justify-content-center align-items-center\">\n      <img src={image} alt=\"not found\" style={{ width: 300 }} />\n      <p className=\"my-3\">Произошол отрицательний поиск. Потерь нет!</p>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const EnterLabel = styled.label`\n  width: 100%;\n  margin-bottom: ${p => p.theme.space[3]}px;\n  font-weight: ${p => p.theme.fontWeights.medium};\n`;\nexport const EnterInput = styled.input`\n  width: 100%;\n  height: ${p => p.theme.space[5]}px;\n  margin-top: ${p => p.theme.space[2]}px;\n  border-radius: ${p => p.theme.radii.md};\n`;\n\nexport const StyledButton = styled.button`\n  padding: ${p => p.theme.space[3]}px;\n  border-radius: ${p => p.theme.radii.md};\n  border: ${p => p.theme.borders.none};\n  transition: background-color 250ms linear;\n\n  :hover,\n  :focus {\n    background-color: ${p => p.theme.colors.accent};\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  border: ${p => p.theme.borders.normal} ${p => p.theme.colors.contact_border};\n  border-radius: ${p => p.theme.radii.sm};\n\n  padding: ${p => p.theme.space[2]}px;\n  margin-bottom: ${p => p.theme.space[3]}px;\n\n  p {\n    margin-right: ${p => p.theme.space[3]}px;\n  }\n`;\n","// import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/contacts.operations';\nimport { getIsLoading } from '../../redux/contacts/contacts.selectors';\n\nimport { StyledButton } from '../App.styled';\nimport { ContactItem } from './Contact.styled';\n\nimport { toast } from 'react-hot-toast';\n\nconst Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const { id, name, number } = contact;\n  const handleDelete = async () => {\n    try {\n      await dispatch(deleteContact(id)).unwrap();\n      toast.success('Successfully delete', {\n        autoClose: 1500,\n      });\n    } catch {\n      toast.error('Ooops, try again', {\n        autoClose: 1500,\n      });\n    }\n  };\n\n  return (\n    <ContactItem key={id}>\n      <p>\n        {name}, {number}\n      </p>\n      <StyledButton type=\"button\" disabled={isLoading} onClick={handleDelete}>\n        Delete\n      </StyledButton>\n    </ContactItem>\n  );\n};\n\nexport default Contact;\n\n// ContactList.propTypes = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.string.isRequired,\n//       name: PropTypes.string.isRequired,\n//       number: PropTypes.string.isRequired,\n//     })\n//   ),\n//   onDeleteContact: PropTypes.func.isRequired,\n// };\n","import styled from 'styled-components';\n\nexport const ContactListStyled = styled.ul`\n  padding: ${p => p.theme.space[3]}px 0;\n`;\n","import { useSelector } from 'react-redux';\nimport {\n  getContacts,\n  getFilter,\n} from '../../redux/contacts/contacts.selectors';\n\n// import PropTypes from 'prop-types';\nimport { NotFound } from 'components/NotFound/NotFound';\n\nimport Contact from '../Contact/index';\nimport { ContactListStyled } from './ContactList.styled';\n\nconst ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  const normalizeFilter = filter.toLowerCase();\n  const filteredContacts = contacts.filter(\n    contact =>\n      contact.name.toLowerCase().includes(normalizeFilter) ||\n      contact.number.includes(normalizeFilter)\n  );\n\n  return (\n    <ContactListStyled>\n      {filteredContacts.length ? (\n        filteredContacts.map(contact => {\n          return <Contact key={contact.id} contact={contact} />;\n        })\n      ) : (\n        <NotFound />\n      )}\n    </ContactListStyled>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n  shadow,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n  shadow\n);\n","import { useState } from 'react';\nimport { addContact } from '../../redux/contacts/contacts.operations';\nimport { getContacts } from '../../redux/contacts/contacts.selectors';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { toast } from 'react-hot-toast';\n\n// import PropTypes from 'prop-types';\nimport { Box } from '../Box';\nimport { EnterLabel, EnterInput, StyledButton } from '../App.styled';\nimport { nanoid } from '../../../node_modules/nanoid/index';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChangeName = e => setName(e.currentTarget.value);\n  const handleChangeNumber = e => setNumber(e.currentTarget.value);\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const newContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    // if contact already exist\n    if (contacts.find(contact => contact.name === newContact.name)) {\n      toast.error(`${name} is already in contacts`, {\n        autoClose: 1500,\n      });\n      return;\n    }\n\n    dispatch(addContact(newContact));\n    toast.success(`${name} add to your contacts`, {\n      autoClose: 1500,\n    });\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"flex-start\"\n      as=\"form\"\n      onSubmit={handleSubmit}\n    >\n      <EnterLabel>\n        Name:\n        <EnterInput\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChangeName}\n        />\n      </EnterLabel>\n\n      <EnterLabel>\n        Number:\n        <EnterInput\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChangeNumber}\n        />\n      </EnterLabel>\n      <StyledButton type=\"submit\">Add contact</StyledButton>\n    </Box>\n  );\n};\n\n// ContactForm.propTypes = {\n//   name: PropTypes.string,\n//   number: PropTypes.string,\n// };\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/contacts.filter.slice';\nimport { getFilter } from '../../redux/contacts/contacts.selectors';\n\n// import PropTypes from 'prop-types';\nimport { EnterLabel, EnterInput } from '../App.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const onChangeFilter = e => {\n    const filterValue = e.target.value;\n\n    try {\n      setFilter(filterValue);\n    } catch {\n      console.log('-> set filter dont work');\n    }\n    try {\n      dispatch(setFilter(filterValue));\n    } catch {\n      console.log('-> filter dispatch dont work');\n    }\n  };\n\n  return (\n    <>\n      <EnterLabel>\n        Filter:\n        <EnterInput type=\"text\" value={filter} onChange={onChangeFilter} />\n      </EnterLabel>\n    </>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const TitleStyle = styled.h2`\n  font-family: ${p => p.theme.fonts.heading};\n  margin-bottom: ${p => p.theme.space[3]}px;\n  margin-top: ${p => p.theme.space[3]}px;\n`;\n","import PropTypes from 'prop-types';\nimport { TitleStyle } from './Title.styledd';\n\nconst Title = ({ children }) => {\n  return (\n    <>\n      <TitleStyle>{children}</TitleStyle>\n    </>\n  );\n};\n\nexport default Title;\n\nTitle.propTypes = {\n  children: PropTypes.string,\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport ContactList from 'components/ContactList/ContactList';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter';\nimport Title from 'components/Title/Title';\nimport { fetchContacts } from 'redux/contacts/contacts.operations';\nimport { getIsLoading } from 'redux/contacts/contacts.selectors';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <Title children=\"Your contacts\" />\n      </Helmet>\n      <ContactForm />\n      <Filter />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getFilter","filter","NotFound","className","src","image","alt","style","width","EnterLabel","styled","p","theme","space","fontWeights","medium","EnterInput","radii","md","StyledButton","borders","none","colors","accent","ContactItem","normal","contact_border","sm","contact","dispatch","useDispatch","useSelector","id","name","number","handleDelete","deleteContact","unwrap","toast","autoClose","type","disabled","onClick","ContactListStyled","normalizeFilter","toLowerCase","filteredContacts","includes","length","map","Box","color","layout","flexbox","grid","background","border","position","shadow","useState","setName","setNumber","display","flexDirection","alignItems","as","onSubmit","e","preventDefault","newContact","nanoid","find","addContact","value","pattern","title","required","onChange","currentTarget","filterValue","target","setFilter","console","log","TitleStyle","fonts","heading","children","Tasks","useEffect","fetchContacts","Helmet"],"sourceRoot":""}