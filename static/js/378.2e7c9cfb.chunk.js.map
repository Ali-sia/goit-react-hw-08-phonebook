{"version":3,"file":"static/js/378.2e7c9cfb.chunk.js","mappings":"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","sources":["redux/contacts/contacts.selectors.js","components/NotFound/NotFound.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.js"],"sourcesContent":["//selectors\nexport const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter;\n","export const NotFound = () => {\n  return (\n    <div className=\"d-flex flex-column justify-content-center align-items-center\">\n      <p className=\"my-3\">We don&apos;t find anything ðŸ˜¢</p>\n    </div>\n  );\n};\n","// import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/contacts.operations';\nimport { getIsLoading } from '../../redux/contacts/contacts.selectors';\n\nimport { toast } from 'react-hot-toast';\n\nimport AccountCircleOutlinedIcon from '@mui/icons-material/AccountCircleOutlined';\n\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nconst Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const { id, name, number } = contact;\n  const handleDelete = async () => {\n    try {\n      await dispatch(deleteContact(id)).unwrap();\n      toast.success('Successfully delete', {\n        autoClose: 1500,\n      });\n    } catch {\n      toast.error('Ooops, try again', {\n        autoClose: 1500,\n      });\n    }\n  };\n\n  return (\n    <>\n      <ListItem\n        secondaryAction={\n          <IconButton\n            edge=\"end\"\n            aria-label=\"delete\"\n            type=\"button\"\n            onClick={handleDelete}\n            disabled={isLoading}\n          >\n            <DeleteIcon />\n          </IconButton>\n        }\n        sx={{\n          borderBottom: '1px solid gray',\n        }}\n      >\n        <ListItemAvatar>\n          <Avatar>\n            <AccountCircleOutlinedIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText primary={name} secondary={number} />\n      </ListItem>\n    </>\n    // <ListItem\n    //   key={id}\n    //   // sx={{\n    //   //   borderBottom: '1px solid gray',\n    //   //   // display: 'flex',\n    //   //   // justifyContent: 'space-between',\n    //   // }}\n    // >\n    //   <ListItemIcon>\n    //     <AccountCircleOutlinedIcon sx={{ marginRight: '12px' }} />\n    //   </ListItemIcon>\n    //   <ListItemText>\n    //     {name}, {number}\n    //   </ListItemText>\n    //   <IconButton\n    //     type=\"button\"\n    //     disabled={isLoading}\n    //     onClick={handleDelete}\n    //     aria-label=\"delete\"\n    //     sx={{\n    //       maxWidth: '60px',\n    //     }}\n    //   >\n    //     <DeleteOutlineOutlinedIcon />\n    //   </IconButton>\n    // </ListItem>\n  );\n};\n\nexport default Contact;\n\n// ContactList.propTypes = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.string.isRequired,\n//       name: PropTypes.string.isRequired,\n//       number: PropTypes.string.isRequired,\n//     })\n//   ),\n//   onDeleteContact: PropTypes.func.isRequired,\n// };\n","import { useSelector } from 'react-redux';\nimport {\n  getContacts,\n  getFilter,\n} from '../../redux/contacts/contacts.selectors';\n\n// import PropTypes from 'prop-types';\nimport { NotFound } from 'components/NotFound/NotFound';\nimport Contact from '../Contact/index';\nimport List from '@mui/material/List';\n\nconst ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  const normalizeFilter = filter.toLowerCase();\n  const filteredContacts = contacts.filter(\n    contact =>\n      contact.name.toLowerCase().includes(normalizeFilter) ||\n      contact.number.includes(normalizeFilter)\n  );\n\n  return (\n    <List>\n      {filteredContacts.length ? (\n        filteredContacts.map(contact => {\n          return <Contact key={contact.id} contact={contact} />;\n        })\n      ) : (\n        <NotFound />\n      )}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import { useState } from 'react';\nimport { addContact } from '../../redux/contacts/contacts.operations';\nimport { getContacts } from '../../redux/contacts/contacts.selectors';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { toast } from 'react-hot-toast';\n\n// import PropTypes from 'prop-types';\nimport FormGroup from '@mui/material/FormGroup';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n\nimport { ColorButton } from 'components/assetsStyles/ButtonStyledFromMUI';\n\nimport { nanoid } from '../../../node_modules/nanoid/index';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChangeName = e => setName(e.currentTarget.value);\n  const handleChangeNumber = e => setNumber(e.currentTarget.value);\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const newContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    // if contact already exist\n    if (contacts.find(contact => contact.name === newContact.name)) {\n      toast.error(`${name} is already in contacts`, {\n        autoClose: 1500,\n      });\n      return;\n    }\n\n    dispatch(addContact(newContact));\n    toast.success(`${name} add to your contacts`, {\n      autoClose: 1500,\n    });\n\n    setName(' ');\n    setNumber(' ');\n  };\n\n  return (\n    <Box sx={{ width: '100%' }}>\n      <Typography variant=\"h4\" gutterBottom>\n        Add contact\n      </Typography>\n      <form onSubmit={handleSubmit}>\n        <FormGroup\n          sx={{\n            marginRight: 'auto',\n            marginLeft: 'auto',\n          }}\n        >\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Contact name\"\n            variant=\"outlined\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChangeName}\n            required\n            sx={{\n              marginBottom: '20px',\n            }}\n          />\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Number\"\n            variant=\"outlined\"\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            onChange={handleChangeNumber}\n            required\n            sx={{\n              marginBottom: '20px',\n            }}\n          />\n\n          <ColorButton variant=\"contained\" type=\"submit\">\n            Add contact\n          </ColorButton>\n        </FormGroup>\n      </form>\n    </Box>\n  );\n};\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/contacts.filter.slice';\nimport { getFilter } from '../../redux/contacts/contacts.selectors';\n\n// import PropTypes from 'prop-types';\nimport TextField from '@mui/material/TextField';\nimport FormGroup from '@mui/material/FormGroup';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const onChangeFilter = e => {\n    const filterValue = e.target.value;\n\n    try {\n      setFilter(filterValue);\n    } catch {\n      console.log('-> set filter dont work');\n    }\n    try {\n      dispatch(setFilter(filterValue));\n    } catch {\n      console.log('-> filter dispatch dont work');\n    }\n  };\n\n  return (\n    <>\n      <FormGroup\n        sx={{\n          marginTop: '20px',\n          marginRight: 'auto',\n          marginLeft: 'auto',\n        }}\n      >\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Filter\"\n          variant=\"outlined\"\n          type=\"text\"\n          value={filter}\n          onChange={onChangeFilter}\n        />\n      </FormGroup>\n    </>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport ContactList from 'components/ContactList/ContactList';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter';\n\nimport { Loader } from 'components/Loader/Loader';\nimport { fetchContacts } from 'redux/contacts/contacts.operations';\nimport { getIsLoading } from 'redux/contacts/contacts.selectors';\n\nimport { Typography } from '@mui/material';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <Typography variant=\"h4\" gutterBottom>\n          Your contacts\n        </Typography>\n      </Helmet>\n      <ContactForm />\n      <Typography variant=\"h4\" gutterBottom sx={{ marginTop: '15px' }}>\n        Contacts list\n      </Typography>\n      <Filter />\n      <div>{isLoading && <Loader />}</div>\n      <ContactList />\n    </>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getFilter","filter","NotFound","className","contact","dispatch","useDispatch","useSelector","id","name","number","handleDelete","deleteContact","unwrap","toast","autoClose","ListItem","secondaryAction","IconButton","edge","type","onClick","disabled","Delete","sx","borderBottom","ListItemAvatar","Avatar","AccountCircleOutlined","ListItemText","primary","secondary","normalizeFilter","toLowerCase","filteredContacts","includes","List","length","map","useState","setName","setNumber","Box","width","Typography","variant","gutterBottom","onSubmit","e","preventDefault","newContact","nanoid","find","addContact","FormGroup","marginRight","marginLeft","TextField","label","value","onChange","currentTarget","required","marginBottom","pattern","title","marginTop","filterValue","target","setFilter","console","log","Contacts","useEffect","fetchContacts","Helmet","Loader"],"sourceRoot":""}